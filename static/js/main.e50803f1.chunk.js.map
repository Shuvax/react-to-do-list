{"version":3,"sources":["components/ToDoForm.js","components/Todo.js","components/ToDoList.js","components/App.js","index.js"],"names":["ToDoForm","state","text","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","onSubmit","id","shortid","generate","complete","this","onChange","placeholder","className","onClick","React","Component","style","display","justifyContent","textDecoration","todo","toggleComplete","onDelete","ToDoList","todos","todoToShow","toggleAllComplete","addTodo","map","updateTodoToShow","s","handleDeleteTodo","filter","removeAllTodosThatAreComplete","Todo","key","textAlign","length","some","App","alignItems","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e50803f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport shortid from 'shortid';\r\nimport './ToDoList.css';\r\n\r\nclass ToDoForm extends React.Component {\r\n    state = { text: '' }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ \r\n            [e.target.name]: e.target.value\r\n            \r\n        });\r\n    };\r\n\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit({\r\n            id: shortid.generate(),\r\n            text: this.state.text,\r\n            complete: false\r\n        })\r\n        this.setState({ \r\n            text: ''\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input \r\n                    name='text'\r\n                    value={this.state.text} \r\n                    onChange={this.handleChange} \r\n                    placeholder='To do...'\r\n                />\r\n                <button className='addButton' onClick={this.handleSubmit}>Add</button>\r\n            </form>\r\n           \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ToDoForm;","import React from 'react';\r\nimport './ToDoList.css';\r\n\r\nexport default (props) => (\r\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <div \r\n            style={{\r\n                textDecoration: props.todo.complete ? 'line-through': ''\r\n            }}\r\n            onClick={props.toggleComplete}\r\n        >      \r\n            {props.todo.text}\r\n        </div>\r\n        <button className='deleteButton' onClick={props.onDelete}>x</button>\r\n    </div>\r\n)","import React from 'react';\r\nimport ToDoForm from './ToDoForm';\r\nimport Todo from './Todo';\r\nimport './ToDoList.css';\r\n\r\nclass ToDoList extends React.Component {\r\n    state = { todos: [], todoToShow: 'all', toggleAllComplete: true }\r\n\r\n\r\n    addTodo = (todo) => { \r\n        this.setState({\r\n            todos: [todo, ...this.state.todos]\r\n        });\r\n    }\r\n\r\n    toggleComplete = (id) => {\r\n        this.setState({ \r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        complete: !todo.complete\r\n                        // returns todo object but just changes the complete value to opposite of original\r\n                    };\r\n                } else {\r\n                    return todo;\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    updateTodoToShow = (s) => {\r\n        this.setState({\r\n            todoToShow: s\r\n        })\r\n    }\r\n\r\n\r\n    handleDeleteTodo = (id) => {\r\n        this.setState({\r\n            todos: this.state.todos.filter(todo => todo.id !== id)\r\n        })\r\n    }\r\n\r\n    removeAllTodosThatAreComplete = () => {\r\n        this.setState({\r\n            todos: this.state.todos.filter(todo => !todo.complete)\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let todos = [];\r\n\r\n        if (this.state.todoToShow === 'all') {\r\n            todos = this.state.todos;\r\n        } else if (this.state.todoToShow === 'active') {\r\n            todos = this.state.todos.filter(todo => !todo.complete)\r\n        } else if (this.state.todoToShow === 'complete') {\r\n            todos = this.state.todos.filter(todo => todo.complete)\r\n        }\r\n\r\n        return (\r\n            <div /*style={{ display: 'flex', justifyContent: 'center' }}*/>\r\n                \r\n                <div>\r\n                    <ToDoForm onSubmit={this.addTodo} />\r\n                    <br />\r\n                    {todos.map(todo => (\r\n                        <Todo \r\n                            key={todo.id} \r\n                            toggleComplete={() => this.toggleComplete(todo.id)} \r\n                            onDelete={() => this.handleDeleteTodo(todo.id)}\r\n                            todo={todo} \r\n                        />\r\n                    ))}\r\n                    <br />\r\n                </div>\r\n            \r\n                <div className='leftToDo' style={{ textAlign: 'center' }}>\r\n                    Left to do: {this.state.todos.filter(todo => !todo.complete).length}\r\n                </div>\r\n                \r\n                <div style={{ textAlign: 'center' }}>\r\n                    <br />\r\n                    <div >\r\n                        <button className='button-basic' onClick={() => this.updateTodoToShow('all')}>all</button>\r\n                    </div>\r\n                    \r\n                    <br />\r\n                    <div >\r\n                        <button className='button-basic' onClick={() => this.updateTodoToShow('active')}>active</button>\r\n                    </div>\r\n                    \r\n                    <br />\r\n                    <div >\r\n                        <button className='button-basic' onClick={() => this.updateTodoToShow('complete')}>complete</button>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n                \r\n                \r\n                {this.state.todos.some(todo => todo.complete) ? (\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <button onClick={this.removeAllTodosThatAreComplete}>\r\n                        remove all complete todos\r\n                    </button>\r\n                </div>\r\n                ) : null}\r\n                \r\n                <div style={{ textAlign: 'center' }}>\r\n                    <button \r\n                        className='button-basic'\r\n                        onClick={() => \r\n                            this.setState({\r\n                                todos: this.state.todos.map(todo => ({\r\n                                    ...todo,\r\n                                    complete: this.state.toggleAllComplete\r\n                                })),\r\n                                toggleAllComplete: !this.state.toggleAllComplete\r\n                            })\r\n                        }\r\n                    >\r\n                        Toggle All Complete: {`${this.state.toggleAllComplete}`}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\r\nimport ToDoList from './ToDoList'; \r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div\r\n                style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n                }}\r\n            >\r\n                <ToDoList />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}